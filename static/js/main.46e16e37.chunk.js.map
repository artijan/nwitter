{"version":3,"sources":["fbase.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","routes/Profile.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firebaseInstance","authService","dbService","storageService","AuthForm","useState","email","setEmail","password","setPassword","newAccount","setNewAccount","error","SetError","onChange","event","target","name","value","onSubmit","a","preventDefault","createUserWithEmailAndPassword","data","signInWithEmailAndPassword","console","log","message","icon","faTwitter","color","size","className","type","placeholder","required","onClick","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","GithubAuthProvider","signInWithPopup","faGoogle","faGithub","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","doc","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","faCheck","faTimes","faPen","faTrash","NweetFactory","userObj","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uid","uuidv4","putString","response","getDownloadURL","createdAt","Date","now","creatorId","collection","add","maxLength","for","faPlus","accept","theFile","files","reader","FileReader","onloadend","finishedEvent","result","currentTarget","readAsDataURL","faWindowClose","Home","nweets","setNweets","useEffect","onSnapshot","snapshot","nweetArray","docs","map","key","Navigation","to","faUserCircle","displayName","refreshUser","history","useHistory","newDisplayName","setNewDisplayName","updateProfile","faKissWinkHeart","signOut","push","AppRouter","isLoggedIn","exact","path","Profile","App","init","setInit","setUserObj","onAuthStateChanged","user","args","currentUser","Boolean","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.46e16e37.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_API_KEY,\r\n  authDomain: process.env.REACT_APP_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_MESSAGIN_ID,\r\n  appId: process.env.REACT_APP_APP_ID,\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst AuthForm = () => {\r\n  // useState를 사용하여 각 변수 상태 선언\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [newAccount, setNewAccount] = useState(true);\r\n  const [error, SetError] = useState(\"\");\r\n\r\n  // email, passward 값을 입력할때 실시간으로 해당 값을 변수에 넣고 업데이트\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { name, value },\r\n    } = event;\r\n    if (name === \"email\") {\r\n      setEmail(value);\r\n    } else if (name === \"password\") {\r\n      setPassword(value);\r\n    }\r\n  };\r\n  // email, passward값을 제출할때 onSubmit 이벤트 발생\r\n  const onSubmit = async (event) => {\r\n    // 값 제출시 웹 페이지 자동 리프레쉬 방지\r\n    event.preventDefault();\r\n    // authService API를 사용하여 사용자 계정 생성 or 계정이 있을시 로그인 가능\r\n    try {\r\n      let data;\r\n      if (newAccount) {\r\n        data = await authService.createUserWithEmailAndPassword(\r\n          email,\r\n          password\r\n        );\r\n      } else {\r\n        data = await authService.signInWithEmailAndPassword(email, password);\r\n      }\r\n      console.log(data);\r\n    } catch (error) {\r\n      SetError(error.message);\r\n    }\r\n  };\r\n  const toggleAccount = () => setNewAccount((prev) => !prev);\r\n  return (\r\n    <>\r\n      <FontAwesomeIcon\r\n        icon={faTwitter}\r\n        color={\"#04AAFF\"}\r\n        size=\"2x\"\r\n        className=\"auth_icon_twitter\"\r\n      />\r\n      <h1 className=\"auth_titleText\">뉴윗터에 오신 것을 환영합니다!</h1>\r\n      <form onSubmit={onSubmit} className=\"auth_form_wrapper\">\r\n        <input\r\n          name=\"email\"\r\n          type=\"email\"\r\n          placeholder=\"이메일\"\r\n          required\r\n          value={email}\r\n          onChange={onChange}\r\n          className=\"auth_form auth_input\"\r\n        />\r\n        <input\r\n          name=\"password\"\r\n          type=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          required\r\n          value={password}\r\n          onChange={onChange}\r\n          className=\"auth_form auth_input\"\r\n        />\r\n        {error && <div className=\"authError\">{error}</div>}\r\n        <input\r\n          type=\"submit\"\r\n          value={newAccount ? \"가입하기\" : \"로그인\"}\r\n          className=\"auth_form auth_submit\"\r\n        />\r\n      </form>\r\n\r\n      <span onClick={toggleAccount} className=\"auth_form auth_switch\">\r\n        {newAccount ? \"로그인\" : \"가입하기\"}\r\n      </span>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AuthForm;\r\n","import AuthForm from \"components/AuthForm\";\r\nimport { authService } from \"fbase\";\r\nimport { firebaseInstance } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub, faGoogle } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n  const onSocialClick = async (event) => {\r\n    const {\r\n      target: { name },\r\n    } = event;\r\n    let provider;\r\n    if (name === \"google\") {\r\n      provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n    } else if (name === \"github\") {\r\n      provider = new firebaseInstance.auth.GithubAuthProvider();\r\n    }\r\n    const data = await authService.signInWithPopup(provider);\r\n  };\r\n\r\n  // 실제 HTML 코딩 값 반환\r\n  return (\r\n    <div className=\"auth_body\">\r\n      <AuthForm />\r\n      <div className=\"auth_btn_wrapper\">\r\n        <button\r\n          onClick={onSocialClick}\r\n          name=\"google\"\r\n          className=\"auth_socialBtn google\"\r\n        >\r\n          구글 계정으로 로그인\r\n          <FontAwesomeIcon icon={faGoogle} className=\"auth_socialBtn_icon\" />\r\n        </button>\r\n        <button\r\n          onClick={onSocialClick}\r\n          name=\"github\"\r\n          className=\"auth_socialBtn github\"\r\n        >\r\n          깃허브 계정으로 로그인\r\n          <FontAwesomeIcon icon={faGithub} className=\"auth_socialBtn_icon\" />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Auth;\r\n","import { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faCheck,\r\n  faPen,\r\n  faTimes,\r\n  faTrash,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n  const [editing, setEditing] = useState(false);\r\n  const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n  const onDeleteClick = async () => {\r\n    const ok = window.confirm(\"정말로 삭제 하시겠어요?\");\r\n    if (ok) {\r\n      await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n      await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n    }\r\n  };\r\n  const toggleEditing = () => {\r\n    setEditing((prev) => !prev);\r\n  };\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n      text: newNweet,\r\n    });\r\n    setEditing(false);\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewNweet(value);\r\n  };\r\n  return (\r\n    <div>\r\n      {editing ? (\r\n        <>\r\n          {isOwner && (\r\n            <>\r\n              <form onSubmit={onSubmit} className=\"nweet_edit\">\r\n                {nweetObj.attachmentUrl && (\r\n                  <img\r\n                    src={nweetObj.attachmentUrl}\r\n                    className=\"nweet_body__image\"\r\n                  />\r\n                )}\r\n                <div className=\"nweet_edit_sub\">\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Edit your nweet\"\r\n                    value={newNweet}\r\n                    onChange={onChange}\r\n                    required\r\n                    className=\"nweet_edit_text\"\r\n                  />\r\n                  <button type=\"submit\" className=\"nweet_edit_update\">\r\n                    <FontAwesomeIcon icon={faCheck} />\r\n                  </button>\r\n                  <span onClick={toggleEditing} className=\"nweet_edit_cancle\">\r\n                    <FontAwesomeIcon icon={faTimes} />\r\n                  </span>\r\n                </div>\r\n              </form>\r\n            </>\r\n          )}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <div className=\"nweet_body\">\r\n            {nweetObj.attachmentUrl && (\r\n              <img src={nweetObj.attachmentUrl} className=\"nweet_body__image\" />\r\n            )}\r\n            <div className=\"nweet_body__sub\">\r\n              <h4 className=\"nweet_body__sub__text\">{nweetObj.text}</h4>\r\n              <div>\r\n                {isOwner && (\r\n                  <>\r\n                    <span\r\n                      className=\"nweet_body__sub__btn edit\"\r\n                      onClick={toggleEditing}\r\n                    >\r\n                      <FontAwesomeIcon icon={faPen} />\r\n                    </span>\r\n                    <span\r\n                      className=\"nweet_body__sub__btn\"\r\n                      onClick={onDeleteClick}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </span>\r\n                  </>\r\n                )}\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\nexport default Nweet;\r\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faWindowClose } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nconst NweetFactory = ({ userObj }) => {\r\n  const [nweet, setNweet] = useState(\"\");\r\n  const [attachment, setAttachment] = useState(\"\");\r\n\r\n  const onSubmit = async (event) => {\r\n    if (nweet === \"\") {\r\n      return;\r\n    }\r\n    event.preventDefault();\r\n    let attachmentUrl = \"\";\r\n    if (attachment !== \"\") {\r\n      const attachmentRef = storageService\r\n        .ref()\r\n        .child(`${userObj.uid}/${uuidv4()}`);\r\n      const response = await attachmentRef.putString(attachment, \"data_url\");\r\n      attachmentUrl = await response.ref.getDownloadURL();\r\n    }\r\n    const nweetObj = {\r\n      text: nweet,\r\n      createdAt: Date.now(),\r\n      creatorId: userObj.uid,\r\n      attachmentUrl,\r\n    };\r\n    await dbService.collection(\"nweets\").add(nweetObj);\r\n    setNweet(\"\");\r\n    setAttachment(\"\");\r\n  };\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNweet(value);\r\n  };\r\n\r\n  const onFileChange = (event) => {\r\n    const {\r\n      target: { files },\r\n    } = event;\r\n    const theFile = files[0];\r\n    const reader = new FileReader();\r\n    reader.onloadend = (finishedEvent) => {\r\n      const {\r\n        currentTarget: { result },\r\n      } = finishedEvent;\r\n      setAttachment(result);\r\n    };\r\n    reader.readAsDataURL(theFile);\r\n  };\r\n  const onClearAttachment = () => setAttachment(\"\");\r\n\r\n  return (\r\n    <form onSubmit={onSubmit} className=\"nweet_form_body\">\r\n      <div className=\"nweet_form\">\r\n        <input\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"마음껏 공유해봐요!\"\r\n          maxLength={120}\r\n          className=\"nweet_form_input\"\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"nweet_form_submit\" />\r\n      </div>\r\n      <label for=\"attach-file\" className=\"nweet_form_label\">\r\n        <span className=\"nweet_form_label__text\">사진 추가하기</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n      <input\r\n        id=\"attach-file\"\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={onFileChange}\r\n        className=\"nweet_form_photo\"\r\n      />\r\n\r\n      {attachment && (\r\n        <div className=\"nweet_preview\">\r\n          <img src={attachment} className=\"nweet_preview__photo\" />\r\n          <button\r\n            className=\"nweet_previewPhoto__btn\"\r\n            onClick={onClearAttachment}\r\n          >\r\n            <FontAwesomeIcon icon={faWindowClose} size=\"3x\" />\r\n          </button>\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default NweetFactory;\r\n","import Nweet from \"components/Nweet\";\r\nimport NweetFactory from \"components/NweetFactory\";\r\nimport { dbService, storageService } from \"fbase\";\r\nimport React, { useEffect, useState } from \"react\";\r\n\r\nconst Home = ({ userObj }) => {\r\n  const [nweets, setNweets] = useState([]);\r\n\r\n  useEffect(() => {\r\n    dbService.collection(\"nweets\").onSnapshot((snapshot) => {\r\n      const nweetArray = snapshot.docs.map((doc) => ({\r\n        id: doc.id,\r\n        ...doc.data(),\r\n      }));\r\n\r\n      setNweets(nweetArray);\r\n    });\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"home_body\">\r\n      <NweetFactory userObj={userObj} />\r\n      <div className=\"nweet\">\r\n        {nweets.map((nweet) => (\r\n          <Nweet\r\n            key={nweet.id}\r\n            nweetObj={nweet}\r\n            isOwner={nweet.creatorId === userObj.uid}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\r\n\r\nconst Navigation = ({ userObj }) => (\r\n  <nav className=\"nav_body\">\r\n    <ul className=\"nav_links\">\r\n      <li className=\"nav_link_home\">\r\n        <Link to=\"/\">\r\n          <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"3x\" />\r\n        </Link>\r\n      </li>\r\n      <li className=\"nav_link_profile\">\r\n        <Link to=\"/profile\" className=\"nav_link_profile_link\">\r\n          <FontAwesomeIcon\r\n            icon={faUserCircle}\r\n            color={\"#04AAFF\"}\r\n            size=\"3x\"\r\n            className=\"nav_link_profile_icon\"\r\n          />\r\n          {userObj.displayName}님의 프로필\r\n        </Link>\r\n      </li>\r\n    </ul>\r\n    <span className=\"nav_greetings\">\r\n      {userObj.displayName}님 오늘 어떤 일이 있었나요?\r\n    </span>\r\n  </nav>\r\n);\r\nexport default Navigation;\r\n","import { authService } from \"fbase\";\r\nimport React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCheck, faKissWinkHeart } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default ({ refreshUser, userObj }) => {\r\n  const history = useHistory();\r\n  const [newDisplayName, setNewDisplayName] = useState(userObj.displayName);\r\n  const onLogOutCilck = () => {\r\n    authService.signOut();\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const onChange = (event) => {\r\n    const {\r\n      target: { value },\r\n    } = event;\r\n    setNewDisplayName(value);\r\n  };\r\n\r\n  const onSubmit = async (event) => {\r\n    event.preventDefault();\r\n    if (userObj.displayName !== newDisplayName) {\r\n      await userObj.updateProfile({\r\n        displayName: newDisplayName,\r\n      });\r\n      refreshUser();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form onSubmit={onSubmit} className=\"profile_form\">\r\n        <FontAwesomeIcon\r\n          icon={faKissWinkHeart}\r\n          size=\"8x\"\r\n          color=\"#04aaff\"\r\n          className=\"profile_icon\"\r\n        />\r\n        <h3 className=\"profile_name\">{userObj.displayName}</h3>\r\n        <div className=\"profile_update\">\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n          />\r\n          <button type=\"submit\" className=\"profile_form_update\">\r\n            <FontAwesomeIcon icon={faCheck} size=\"2x\" color=\"#04aaff\" />\r\n          </button>\r\n        </div>\r\n\r\n        <button onClick={onLogOutCilck} className=\"profile_form_logOut\">\r\n          로그아웃\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport Auth from \"routes/Auth\";\r\nimport Home from \"routes/Home\";\r\nimport Navigation from \"components/Navigation\";\r\nimport Profile from \"routes/Profile\";\r\n\r\nconst AppRouter = ({ refreshUser, isLoggedIn, userObj }) => {\r\n  return (\r\n    <Router>\r\n      {isLoggedIn && <Navigation userObj={userObj} />}\r\n      <Switch>\r\n        {isLoggedIn ? (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Home userObj={userObj} />\r\n            </Route>\r\n            <Route exact path=\"/profile\">\r\n              <Profile userObj={userObj} refreshUser={refreshUser} />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Route exact path=\"/\">\r\n              <Auth />\r\n            </Route>\r\n          </>\r\n        )}\r\n      </Switch>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import React, { useEffect, useImperativeHandle, useState } from \"react\";\nimport AppRouter from \"components/Router\";\nimport { authService } from \"fbase\";\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [userObj, setUserObj] = useState(null);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) => {\n      if (user) {\n        setUserObj({\n          displayName: user.displayName,\n          uid: user.uid,\n          updateProfile: (args) => user.updateProfile(args),\n        });\n      } else {\n        setUserObj(null);\n      }\n\n      setInit(true);\n    });\n  }, []);\n\n  const refreshUser = () => {\n    const user = authService.currentUser;\n    setUserObj({\n      displayName: user.displayName,\n      uid: user.uid,\n      updateProfile: (args) => user.updateProfile(args),\n    });\n  };\n\n  return (\n    <>\n      {init ? (\n        <AppRouter\n          refreshUser={refreshUser}\n          isLoggedIn={Boolean(userObj)}\n          userObj={userObj}\n        />\n      ) : (\n        \"Initializing...\"\n      )}\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"components/App\";\nimport \"./styles.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}